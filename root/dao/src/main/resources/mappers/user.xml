<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- https://ibatis.apache.org/docs/dotnet/datamapper/ch03s03.html -->

<mapper namespace="com.cicada.dao.user.UserDao">

	<!-- result maps -->
	<resultMap id="userMap" type="User">
		<id column="user_id" property="ID" />
		<result column="user_name" property="name" />
		<result column="first_name" property="firstName" />
		<result column="last_name" property="lastName" />
		<result column="encrypted_passwd" property="encryptedPasswd" />
		<result column="passwd_salt" property="passwdSalt" />
		<result column="security_question" property="securityQuestion" />
		<result column="security_answer" property="securityAnswer" />
		<result column="user_email" property="email" />
		<result column="reg_ip" property="regIP" />
		<result column="license_agreed" property="licenseAgreed" />
		<result column="user_status" property="status" />
		<result column="user_comments" property="comments" />
		<result column="user_creator_id" property="creatorId" />
		<result column="user_owner_id" property="ownerId" />
		<result column="user_cr_date" property="createDate" jdbcType="TIMESTAMP" javaType="Date" />
		<result column="user_up_date" property="updateDate" jdbcType="TIMESTAMP" javaType="Date" />
	</resultMap>

	<insert id="insert" parameterType="User" >
		INSERT INTO users 
		(user_id, user_name, first_name, last_name, encrypted_passwd, passwd_salt, 
		security_question, security_answer, email, reg_ip, license_agreed, status, comments,
		creator_id, owner_id, create_date, update_date)
		VALUES 
		(#{ID}, #{name}, #{firstName}, #{lastName}, #{encryptedPasswd}, #{passwdSalt},
		#{securityQuestion}, #{securityAnswer}, #{email}, #{regIP}, #{licenseAgreed}, #{status}, #{comments}, 
		#{creatorId}, #{ownerId}, #{createDate}, #{updateDate})
	</insert>

	<sql id="defaultSelect">
		SELECT user.user_id, user.user_name, user.first_name, user.last_name, user.encrypted_passwd, 
				user.passwd_salt, user.security_question, user.security_answer, user.email user_email, 
				user.reg_ip, user.license_agreed, user.status user_status, user.comments user_comments, 
				user.creator_id user_creator_id, user.owner_id user_owner_id, 
				user.create_date user_cr_date, user.update_date user_up_date
		FROM users user 
	</sql>	

	<select id="selectOne" parameterType="string" resultMap="userMap">
		<include refid="defaultSelect"/>
		WHERE user.user_id = #{ID}
	</select>

	<select id="selectByName" parameterType="string" resultMap="userMap">
		<include refid="defaultSelect"/>
		WHERE user.user_name = #{userName}
	</select>
	
	<select id="selectByNameAndPasswd" resultMap="userMap">
		<include refid="defaultSelect"/>
		WHERE user.user_name = #{loginName} AND user.encrypted_passwd = #{passwdDigest}
	</select>
	
	<select id="selectBy" resultMap="userMap">
		<include refid="defaultSelect"/>
		<where>
			<if test="filterEntity != null">
				<if test="filterEntity.name != null">
					 user.user_name like '%${filterEntity.name}%'
				</if>
				<if test="filterEntity.firstName != null">
					AND user.first_name like '%${filterEntity.firstName}%'
				</if>
				<if test="filterEntity.lastName != null">
					AND user.last_name like '%${filterEntity.lastName}%'
				</if>
				<if test="filterEntity.status != null">
					AND user.status = #{filterEntity.status}
				</if>
			</if>
		</where>
		<if test="startIndex >= 0 and fetchRows > 0">
			LIMIT #{startIndex}, #{fetchRows}
		</if>
	</select>

	<select id="selectAll" resultMap="userMap">
		<include refid="defaultSelect"/>
	</select>
	
	<sql id="defaultCount">
		SELECT count(*)	FROM users user
	</sql>
	
	<select id="countBy" resultType="int">
		<include refid="defaultCount"/>
		<where>
			<if test="filterEntity != null">
				<if test="filterEntity.name != null">
					 user.user_name like '%${filterEntity.name}%'
				</if>
				<if test="filterEntity.firstName != null">
					AND user.first_name like '%${filterEntity.firstName}%'
				</if>
				<if test="filterEntity.lastName != null">
					AND user.last_name like '%${filterEntity.lastName}%'
				</if>
				<if test="filterEntity.status != null">
					AND user.status = #{filterEntity.status}
				</if>
			</if>
		</where>
	</select>
	
	<select id="countAll" resultType="int">
		<include refid="defaultCount" />
	</select>

	<update id="update" parameterType="User">
		UPDATE users 
		<set>
	      <if test="name != null">user_name = #{name},</if>
	      <if test="firstName != null">first_name = #{firstName},</if>
	      <if test="lastName != null">last_name = #{lastName},</if>
	      <if test="encryptedPasswd != null">encrypted_passwd = #{encryptedPasswd},</if>
	      <if test="passwdSalt != null">passwd_salt = #{passwdSalt},</if>
	      <if test="securityQuestion != null">security_question = #{securityQuestion},</if>
	      <if test="securityAnswer != null">security_answer = #{securityAnswer},</if>
	      <if test="email != null">email = #{email},</if>
	      <if test="regIP != null">reg_ip = #{regIP},</if>
	      <if test="licenseAgreed != null">license_agreed = #{licenseAgreed},</if>
	      <if test="status != null">status = #{status},</if>
	      <if test="comments != null">comments = #{comments},</if>
	      <if test="creatorId != null">creator_id = #{creatorId},</if>
	      <if test="ownerId != null">owner_id = #{ownerId},</if>
	      <if test="createDate != null">create_date = #{createDate},</if>
	      <if test="updateDate != null">update_date = #{updateDate},</if>
	    </set>
		WHERE user_id = #{ID}
	</update>

	<delete id="delete" parameterType="string">
		DELETE FROM users WHERE user_id = #{ID}
	</delete>

</mapper>